{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/WasaPhotoLogo.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"logo\",\n  src: _imports_0\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Login\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"register\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \" Login\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_hoisted_1, _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.id = $event),\n    placeholder: \"Enter ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.id]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.name = $event),\n    placeholder: \"Enter Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), _hoisted_4])], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","class","src","type","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","login","_hoisted_1","_hoisted_2","_hoisted_3","$data","id","$event","placeholder","name","_hoisted_4"],"sources":["/Users/shivamkumar/Desktop/wasaphoto/webui/src/components/LoginForm.vue"],"sourcesContent":["<template>\n   <form @submit.prevent=\"login\" >\n<img class=\"logo\"  src=\"../assets/WasaPhotoLogo.png\" />\n<h1>Login</h1>\n<div class=\"register\">\n  <input type=\"text\" v-model=\"id\" placeholder=\"Enter ID\"/>\n  <input type=\"text\" v-model=\"name\" placeholder=\"Enter Name\"/>\n  <button type=\"submit\"> Login</button>\n\n</div>\n   </form>\n</template>\n<script>\nexport default {\n  name :'LoginForm',\n  data()\n  {\n    return {\n      id: '',\n      name: '',\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:8080/session', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            id: this.id,\n            name: this.name,\n          }),\n        });\n\n        if (response.ok) {\n          console.log('Login successful!');\n          const username = this.id; // Use the id or any other property as the username\n\n          // Use Vue Router to navigate to the user profile page\n          this.$router.push({ path: `/${username}/home` });\n          // You can redirect the user to another page or perform other actions on successful login\n        } else {\n          console.error('Login failed:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error during login:', error.message);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.logo{\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n}\n.register input{\n  width: 300px;\n  height: 40px;\n  padding-left: 20px;\n  display: block;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px cornflowerblue;\n\n}\n.register button{\n  width: 320px;\n  height: 40px;\n  border: 1px crimson;\n  background: skyblue;\n  color: aliceblue;\n  cursor: pointer;\n}\n</style>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- components/LoginForm.vue\n\n<template>\n  <div class =\"register\">\n    <h2>Login</h2>\n    <form @submit.prevent=\"login\">\n      \n      <label for=\"id\">ID:</label>\n      <input type=\"text\" id=\"id\" v-model=\"id\" />\n\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" v-model=\"name\" />\n\n      <buttontype=\"submit\">Login</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      id: '',\n      name: '',\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:8080/session', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            id: this.id,\n            name: this.name,\n          }),\n        });\n\n        if (response.ok) {\n          console.log('Login successful!');\n          const username = this.id; // Use the id or any other property as the username\n\n          // Use Vue Router to navigate to the user profile page\n          this.$router.push({ path: `http://localhost:8080/user/${username}` });\n          // You can redirect the user to another page or perform other actions on successful login\n        } else {\n          console.error('Login failed:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error during login:', error.message);\n      }\n    },\n  },\n};\n</script>\n\n<style >\n.click button{\n  width: 500px;\n}\n</style> -->\n"],"mappings":";OAEmBA,UAAiC;gCAApDC,mBAAA,CAAuD;EAAlDC,KAAK,EAAC,MAAM;EAAEC,GAAiC,EAAjCH;;gCACnBC,mBAAA,CAAc,YAAV,OAAK;;EACJC,KAAK,EAAC;AAAU;gCAGnBD,mBAAA,CAAqC;EAA7BG,IAAI,EAAC;AAAQ,GAAC,QAAM;;uBAN3BC,mBAAA,CASO;IATAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;MAC/BG,UAAuD,EACvDC,UAAc,EACdZ,mBAAA,CAKM,OALNa,UAKM,G,gBAJJb,mBAAA,CAAwD;IAAjDG,IAAI,EAAC,MAAM;+DAAUW,KAAA,CAAAC,EAAE,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAhBH,KAAA,CAAAC,EAAE,E,mBAC9Bf,mBAAA,CAA4D;IAArDG,IAAI,EAAC,MAAM;+DAAUW,KAAA,CAAAI,IAAI,GAAAF,MAAA;IAAEC,WAAW,EAAC;iDAAlBH,KAAA,CAAAI,IAAI,E,GAChCC,UAAqC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}