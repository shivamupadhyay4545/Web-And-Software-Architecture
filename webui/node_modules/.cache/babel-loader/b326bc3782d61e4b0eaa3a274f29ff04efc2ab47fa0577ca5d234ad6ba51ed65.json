{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/comment-logo.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"main-title\"\n}, \"Hello User, Welcome to your feed\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0,\n  class: \"photo-container\"\n};\nconst _hoisted_3 = {\n  class: \"user-info\"\n};\nconst _hoisted_4 = {\n  class: \"username\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"like-buttons\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"likes-count\"\n};\nconst _hoisted_11 = {\n  class: \"comments-section\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"comment-logo\",\n  src: _imports_0\n}, null, -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"comments-count\"\n};\nconst _hoisted_14 = [\"onUpdate:modelValue\"];\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = {\n  class: \"upload-time\"\n};\nconst _hoisted_17 = {\n  key: 1\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"welcome-message\"\n}, \"Welcome Our new user! Follow someone to see their photos.\", -1 /* HOISTED */));\nconst _hoisted_19 = [_hoisted_18];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UserHeader = _resolveComponent(\"UserHeader\");\n  const _component_UploadPhotoForm = _resolveComponent(\"UploadPhotoForm\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_UserHeader), _createVNode(_component_UploadPhotoForm), _hoisted_1, _createVNode(_component_router_link, {\n    to: {\n      name: 'UserProfile',\n      params: {\n        username: _ctx.$route.params.username\n      }\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Go to User Profile \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"]), $data.userData && $data.userData.photos ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\" Display user data when 'photos' is not null \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userData.photos, photo => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"photo-card\",\n      key: photo.PhotoId\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString(photo.Username), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n      class: \"photo-button\",\n      onClick: $event => $options.showComments(photo)\n    }, [_createElementVNode(\"img\", {\n      src: $options.getImageUrl(photo.Photobytes),\n      alt: \"User Photo\"\n    }, null, 8 /* PROPS */, _hoisted_6)], 8 /* PROPS */, _hoisted_5), _createElementVNode(\"div\", _hoisted_7, [photo.Liked === 1 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      style: {\n        \"background-color\": \"red\"\n      },\n      onClick: $event => $options.toggleLike(photo.PhotoId, true)\n    }, \"Dislike\", 8 /* PROPS */, _hoisted_8)) : (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $options.toggleLike(photo.PhotoId, false)\n    }, \"Like\", 8 /* PROPS */, _hoisted_9)), _createElementVNode(\"p\", _hoisted_10, \"Likes: \" + _toDisplayString(photo.Likes), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"p\", _hoisted_13, \"Comments: \" + _toDisplayString(photo.NoComments), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => $data.commentInputs[photo.PhotoId] = $event,\n      class: \"comment-input\",\n      placeholder: \"Add a comment...\"\n    }, null, 8 /* PROPS */, _hoisted_14), [[_vModelText, $data.commentInputs[photo.PhotoId]]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.postComment(photo.PhotoId),\n      class: \"post-comment-button\"\n    }, \"Post Comment\", 8 /* PROPS */, _hoisted_15)]), _createElementVNode(\"p\", _hoisted_16, \"Uploaded At \" + _toDisplayString($options.formatTimestamp(photo.CreatedAt)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [..._hoisted_19]))]);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","class","src","_hoisted_18","_createElementBlock","_createVNode","_component_UserHeader","_component_UploadPhotoForm","_hoisted_1","_component_router_link","to","name","params","username","_ctx","$route","$data","userData","photos","_hoisted_2","_createCommentVNode","_Fragment","_renderList","photo","key","PhotoId","_hoisted_3","_hoisted_4","_toDisplayString","Username","onClick","$event","$options","showComments","getImageUrl","Photobytes","alt","_hoisted_7","Liked","style","toggleLike","_hoisted_8","_hoisted_9","_hoisted_10","Likes","_hoisted_11","_hoisted_12","_hoisted_13","NoComments","commentInputs","placeholder","postComment","_hoisted_15","_hoisted_16","formatTimestamp","CreatedAt","_hoisted_17","_hoisted_19"],"sources":["/Users/shivamkumar/Downloads/wasagit/Web-And-Software-Architecture/webui/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <UserHeader />\n    <UploadPhotoForm />\n    <h1 class=\"main-title\">Hello User, Welcome to your feed</h1>\n    <router-link :to=\"{ name: 'UserProfile', params: { username: $route.params.username } }\">\n      Go to User Profile\n    </router-link>\n    <div v-if=\"userData && userData.photos\" class=\"photo-container\">\n      <!-- Display user data when 'photos' is not null -->\n      <div class=\"photo-card\" v-for=\"photo in userData.photos\" :key=\"photo.PhotoId\">\n        <div class=\"user-info\">\n          <p class=\"username\">{{ photo.Username }}</p>\n        </div>\n        <button class=\"photo-button\" @click=\"showComments(photo)\">\n          <img :src=\"getImageUrl(photo.Photobytes)\" alt=\"User Photo\" />\n        </button>\n        <div class=\"like-buttons\">\n          <button style=\"background-color:red;\" v-if=\"photo.Liked === 1\" @click=\"toggleLike(photo.PhotoId, true)\">Dislike</button>\n          <button v-else @click=\"toggleLike(photo.PhotoId, false)\">Like</button>\n          <p class=\"likes-count\">Likes: {{ photo.Likes }}</p>\n        </div>\n        <div class=\"comments-section\">\n          <img class=\"comment-logo\" src=\"../assets/comment-logo.png\" />\n          <p class=\"comments-count\">Comments: {{ photo.NoComments }}</p>\n          <input v-model=\"commentInputs[photo.PhotoId]\" class=\"comment-input\" placeholder=\"Add a comment...\" />\n          <button @click=\"postComment(photo.PhotoId)\" class=\"post-comment-button\">Post Comment</button>\n        </div>\n        <p class=\"upload-time\">Uploaded At {{ formatTimestamp(photo.CreatedAt) }}</p>\n      </div>\n    </div>\n    <div v-else>\n      <p class=\"welcome-message\">Welcome Our new user! Follow someone to see their photos.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport UserHeader from '../components/UserHeader.vue';\nimport moment from 'moment';\nimport UploadPhotoForm from '../components/UploadPhotoForm.vue';\n\nexport default {\n  components: {\n    UserHeader,\n    UploadPhotoForm,\n  },\n  name: 'HomeView',\n  data() {\n    return {\n      userData: null,\n      commentInputs: {},\n    };\n  },\n  mounted() {\n    // Fetch user data after component is mounted\n    this.fetchUserData();\n  },\n  methods: {\n    \n    async toggleLike(photoId, liked) {\n      try {\n        const username = this.$route.params.username;\n\n        if (liked) {\n          // Send DELETE request to unlike the photo\n          await axios.delete(`http://localhost:8080/user/${username}/photos/likes?Photoid=${photoId}`);\n        } else {\n          // Send POST request to like the photo\n          await axios.post(`http://localhost:8080/user/${username}/photos/likes?Photoid=${photoId}`);\n        }\n        window.location.reload()\n        // Update dislikeStatus after toggling the like state\n        \n      } catch (error) {\n        console.error('Error while toggling like:', error.message,photoId);\n      }\n    },\n    async postComment(PhotoId) {\n      try {\n        const username = this.$route.params.username;\n        const response = await axios.post(\n          `http://localhost:8080/user/${username}/photos/comment?Photoid=${PhotoId}`,\n          {\n            content: this.commentInputs[PhotoId],\n          }\n        );\n\n        if (response.status === 200) {\n          // Successfully posted comment, fetch updated user data\n          this.fetchUserData();\n          // Clear the comment input\n          this.commentInputs[PhotoId] = '';\n        } else {\n          console.error('Failed to post comment:', response.statusText);\n        }\n      } catch (error) {\n        const username = this.$route.params.username;\n        console.error('Error while posting comment:', error.message, 'username:', username, 'Photoid:', PhotoId);\n      }\n    },\n\n    async fetchUserData() {\n      try {\n        const username = this.$route.params.username;\n        const response = await axios.get(`http://localhost:8080/user/${username}`);\n\n        if (response.status === 200) {\n          this.userData = response.data;\n          // Initialize dislikeStatus for each photo\n          \n        } else {\n          console.error('Failed to fetch user data:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error during user data fetch:', error.message);\n      }\n    },\n    formatTimestamp(timestamp) {\n      // Use moment to format the timestamp\n      return moment(timestamp).format('YYYY-MM-DD HH:mm:ss');\n    },\n    showComments(photo) {\n      const username = this.$route.params.username;\n      // Use Vue Router to navigate to the comments route\n      this.$router.push({\n        name: 'CommentPhotoForm', // Replace with the actual name of your Comments route\n        params: { PhotoId: photo.PhotoId, username: username },\n      });\n    },\n    getImageUrl(photobytes) {\n      if (photobytes) {\n        return `data:image/jpeg;base64,${photobytes}`;\n      }\n\n      // If photobytes is null or undefined, return a placeholder or empty string\n      return '';\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n.main-title {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.photo-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.photo-card {\n  width: 300px;\n  margin: 20px;\n  padding: 15px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.user-info {\n  font-weight: bold;\n}\n\n.photo-button {\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n.like-buttons {\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n}\n\n.like-buttons button {\n  margin-right: 10px;\n  background-color: #3498db;\n  color: #fff;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n}\n\n.like-buttons button:hover {\n  background-color: #2980b9;\n}\n\n.likes-count {\n  margin-left: 10px;\n}\n\n.comments-section {\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n}\n\n.comment-logo {\n  width: 20px;\n  margin-right: 5px;\n}\n\n.comments-count {\n  margin-left: 5px;\n}\n\n.comment-input {\n  margin-right: 10px;\n  padding: 5px;\n  width: 100%;\n}\n\n.post-comment-button {\n  padding: 5px 10px;\n  background-color: #3498db;\n  color: #fff;\n  cursor: pointer;\n  border: none;\n  border-radius: 3px;\n}\n\n.post-comment-button:hover {\n  background-color: #2980b9;\n}\n\n.upload-time {\n  margin-top: 10px;\n  font-size: 12px;\n  color: #888;\n}\n\n.welcome-message {\n  font-size: 18px;\n  color: #888;\n}\n\n\n</style>\n\n\n\n\n\n\n\n˝\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}