{"ast":null,"code":"import axios from 'axios';\nimport ImageCompressor from 'image-compressor.js';\nexport default {\n  data() {\n    return {\n      photoSelected: false,\n      photoFile: null\n    };\n  },\n  methods: {\n    async handleFileChange(event) {\n      const fileInput = event.target;\n      const file = fileInput.files[0];\n      if (file) {\n        // Compress the image\n        const compressor = new ImageCompressor();\n        compressor.compress(file, {\n          quality: 0.2,\n          // Adjust the quality (0 to 1)\n          success: compressedFile => {\n            // Update the photoFile property when a file is selected\n            this.photoFile = compressedFile;\n            this.photoSelected = true;\n          },\n          error: error => {\n            console.error('Error during image compression:', error.message);\n          }\n        });\n      }\n    },\n    async uploadPhoto() {\n      try {\n        const username = this.$route.params.username;\n\n        // Create a FormData object to send the file\n        const formData = new FormData();\n        formData.append('image', this.photoFile);\n\n        // Make a POST request to upload the photo\n        const response = await axios.post(`http://localhost:8080/user/${username}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.status === 201) {\n          console.log('Photo uploaded successfully!');\n          this.$refs.fileInput.value = '';\n          this.photoSelected = false;\n          // You can perform additional actions on successful upload\n        } else {\n          console.error('Failed to upload photo:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error during photo upload:', error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","ImageCompressor","data","photoSelected","photoFile","methods","handleFileChange","event","fileInput","target","file","files","compressor","compress","quality","success","compressedFile","error","console","message","uploadPhoto","username","$route","params","formData","FormData","append","response","post","headers","status","log","$refs","value","statusText"],"sources":["/Users/shivamkumar/Desktop/wasaphoto/webui/src/components/UploadPhotoForm.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Upload Photo</h2>\n      <form @submit.prevent=\"uploadPhoto\">\n        <label for=\"image\">Select Photo:</label>\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\" />\n  \n        <button type=\"submit\" :disabled=\"!photoSelected\">Upload Photo</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import ImageCompressor from 'image-compressor.js';\n  \n  export default {\n    data() {\n      return {\n        photoSelected: false,\n        photoFile: null,\n      };\n    },\n    methods: {\n      async handleFileChange(event) {\n        const fileInput = event.target;\n        const file = fileInput.files[0];\n  \n        if (file) {\n          // Compress the image\n          const compressor = new ImageCompressor();\n          compressor.compress(file, {\n            quality: 0.2, // Adjust the quality (0 to 1)\n            success: compressedFile => {\n              // Update the photoFile property when a file is selected\n              this.photoFile = compressedFile;\n              this.photoSelected = true;\n            },\n            error: error => {\n              console.error('Error during image compression:', error.message);\n            },\n          });\n        }\n      },\n      async uploadPhoto() {\n        try {\n          const username = this.$route.params.username;\n  \n          // Create a FormData object to send the file\n          const formData = new FormData();\n          formData.append('image', this.photoFile);\n  \n          // Make a POST request to upload the photo\n          const response = await axios.post(`http://localhost:8080/user/${username}`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n          });\n  \n          if (response.status === 201) {\n            console.log('Photo uploaded successfully!');\n            this.$refs.fileInput.value = '';\n            this.photoSelected = false;\n            // You can perform additional actions on successful upload\n          } else {\n            console.error('Failed to upload photo:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error during photo upload:', error.message);\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style>\n  /* Add styles as needed */\n  </style>\n  "],"mappings":"AAaE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,eAAc,MAAO,qBAAqB;AAEjD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAACC,KAAK,EAAE;MAC5B,MAAMC,SAAQ,GAAID,KAAK,CAACE,MAAM;MAC9B,MAAMC,IAAG,GAAIF,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC;MAE/B,IAAID,IAAI,EAAE;QACR;QACA,MAAME,UAAS,GAAI,IAAIX,eAAe,CAAC,CAAC;QACxCW,UAAU,CAACC,QAAQ,CAACH,IAAI,EAAE;UACxBI,OAAO,EAAE,GAAG;UAAE;UACdC,OAAO,EAAEC,cAAa,IAAK;YACzB;YACA,IAAI,CAACZ,SAAQ,GAAIY,cAAc;YAC/B,IAAI,CAACb,aAAY,GAAI,IAAI;UAC3B,CAAC;UACDc,KAAK,EAAEA,KAAI,IAAK;YACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;UACjE;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,QAAQ;;QAE5C;QACA,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACtB,SAAS,CAAC;;QAExC;QACA,MAAMuB,QAAO,GAAI,MAAM3B,KAAK,CAAC4B,IAAI,CAAE,8BAA6BP,QAAS,EAAC,EAAEG,QAAQ,EAAE;UACpFK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3BZ,OAAO,CAACa,GAAG,CAAC,8BAA8B,CAAC;UAC3C,IAAI,CAACC,KAAK,CAACxB,SAAS,CAACyB,KAAI,GAAI,EAAE;UAC/B,IAAI,CAAC9B,aAAY,GAAI,KAAK;UAC1B;QACF,OAAO;UACLe,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEU,QAAQ,CAACO,UAAU,CAAC;QAC/D;MACF,EAAE,OAAOjB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC5D;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}