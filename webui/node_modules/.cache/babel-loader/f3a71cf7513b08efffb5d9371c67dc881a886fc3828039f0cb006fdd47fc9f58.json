{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Update Username\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Update Username\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"color\": \"green\"\n  }\n};\nconst _hoisted_5 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.updateUsername && $options.updateUsername(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    placeholder: \"Enter current name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newName = $event),\n    placeholder: \"Enter new name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newName]]), _hoisted_3], 32 /* NEED_HYDRATION */), $data.successMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","style","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","updateUsername","$data","name","$event","placeholder","newName","_hoisted_3","successMessage","_hoisted_4","_toDisplayString","errorMessage","_hoisted_5"],"sources":["/Users/shivamkumar/Downloads/wasagit/Web-And-Software-Architecture/webui/src/components/UpdateUsernameForm.vue"],"sourcesContent":["<template>\n    <div class=\"register\">\n      <h2>Update Username</h2>\n      <form @submit.prevent=\"updateUsername\">\n        <input type=\"text\" v-model=\"name\" placeholder=\"Enter current name\" />\n  \n        <input type=\"text\" v-model=\"newName\" placeholder=\"Enter new name\" />\n  \n        <button type=\"submit\">Update Username</button>\n      </form>\n      <p v-if=\"successMessage\" style=\"color: green;\">{{ successMessage }}</p>\n      <p v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</p>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        name: '',\n        newName: '',\n        successMessage: '',\n        errorMessage: '',\n      };\n    },\n    methods: {\n      async updateUsername() {\n        data= {\n            Name: this.name,\n            Newname: this.newName,\n          }\n        try {\n          const username = this.$route.params.username;\n          \n          const response = await axios.put(`http://localhost:8080/user/${username}`,data);\n  \n          if (response.status === 200) {\n            console.log('Username updated successfully!');\n            this.name = '';\n            this.newName = '';\n            this.successMessage = \"Username Updated Successfully\"\n            // You can perform additional actions on successful update\n          } else {\n            console.error('Failed to update username:', response.statusText);\n            this.errorMessage=\"Oh No!\"\n          }\n        } catch (error) {\n          console.error('Error during username update:', data);\n          this.errorMessage =\" Oh No!\"\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style>\n.register input {\n  width: 200px;\n  height: 40px;\n  padding-left: 20px;\n  display: block;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px cornflowerblue;\n}\n.register button {\n  width: 300px;\n  height: 40px;\n  border: 1px crimson;\n  background: skyblue;\n  color: aliceblue;\n  cursor: pointer;\n}\n</style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAU;gCACnBC,mBAAA,CAAwB,YAApB,iBAAe;gCAMjBA,mBAAA,CAA8C;EAAtCC,IAAI,EAAC;AAAQ,GAAC,iBAAe;;;EAEdC,KAAqB,EAArB;IAAA;EAAA;;;;EACFA,KAAmB,EAAnB;IAAA;EAAA;;;uBAVzBC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAAwB,EACxBL,mBAAA,CAMO;IANAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;sBACnCT,mBAAA,CAAqE;IAA9DC,IAAI,EAAC,MAAM;+DAAUW,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAlBH,KAAA,CAAAC,IAAI,E,mBAEhCb,mBAAA,CAAoE;IAA7DC,IAAI,EAAC,MAAM;+DAAUW,KAAA,CAAAI,OAAO,GAAAF,MAAA;IAAEC,WAAW,EAAC;iDAArBH,KAAA,CAAAI,OAAO,E,GAEnCC,UAA8C,C,4BAEvCL,KAAA,CAAAM,cAAc,I,cAAvBf,mBAAA,CAAuE,KAAvEgB,UAAuE,EAAAC,gBAAA,CAArBR,KAAA,CAAAM,cAAc,oB,mCACvDN,KAAA,CAAAS,YAAY,I,cAArBlB,mBAAA,CAAiE,KAAjEmB,UAAiE,EAAAF,gBAAA,CAAnBR,KAAA,CAAAS,YAAY,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}