{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Hello User, Welcome to your feed\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Welcome Our new user! Follow someone to see their photos.\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_5];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $data.userData && $data.userData.photos ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\" Display user data when 'photos' is not null \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userData.photos, photo => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: photo.PhotoId\n    }, [_createElementVNode(\"p\", null, \"User ID: \" + _toDisplayString(photo.Username), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Likes: \" + _toDisplayString(photo.Likes), 1 /* TEXT */), _createElementVNode(\"p\", null, \"No Comments: \" + _toDisplayString(photo.NoComments), 1 /* TEXT */), _createCommentVNode(\" Display other photo data as needed \"), _createElementVNode(\"img\", {\n      src: $options.getImageUrl(photo.Photobytes),\n      alt: \"User Photo\"\n    }, null, 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [..._hoisted_6]))]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_5","_createElementBlock","_hoisted_1","$data","userData","photos","_hoisted_2","_createCommentVNode","_Fragment","_renderList","photo","key","PhotoId","_toDisplayString","Username","Likes","NoComments","src","$options","getImageUrl","Photobytes","alt","_hoisted_4","_hoisted_6"],"sources":["/Users/shivamkumar/Desktop/wasaphoto/webui/src/views/HomeView.vue"],"sourcesContent":["<!-- Home.vue -->\n\n<template>\n    <div>\n      <h1>Hello User, Welcome to your feed</h1>\n      <div v-if=\"userData && userData.photos\">\n        <!-- Display user data when 'photos' is not null -->\n        <div v-for=\"photo in userData.photos\" :key=\"photo.PhotoId\">\n          <p>User ID: {{ photo.Username }}</p>\n          <p>Likes: {{ photo.Likes }}</p>\n          <p>No Comments: {{ photo.NoComments }}</p>\n          <!-- Display other photo data as needed -->\n          <img :src=\"getImageUrl(photo.Photobytes)\" alt=\"User Photo\" />\n        </div>\n      </div>\n      <div v-else>\n        <p>Welcome Our new user! Follow someone to see their photos.</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'HomeView',\n    data() {\n      return {\n        userData: null,\n      };\n    },\n    props: {\n      photo: Object,\n    },\n    mounted() {\n      // Fetch user data after component is mounted\n      this.fetchUserData();\n    },\n    methods: {\n      async fetchUserData() {\n        try {\n          const username = this.$route.params.username;\n          const response = await axios.get(`http://localhost:8080/user/${username}`);\n  \n          if (response.status === 200) {\n            this.userData = response.data;\n          } else {\n            console.error('Failed to fetch user data:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error during user data fetch:', error.message);\n        }\n      },\n      getImageUrl(photobytes) {\n        if (photobytes) {\n          // Convert the byte array to a base64 string\n          const base64String = btoa(\n            new Uint8Array(photobytes.data).reduce(\n              (data, byte) => data + String.fromCharCode(byte),\n              ''\n            )\n          );\n  \n          // Create a data URI from the base64 string\n          return `data:image/jpeg;base64,${base64String}`;\n        }\n  \n        // If photobytes is null or undefined, return a placeholder or empty string\n        return '';\n      },\n    },\n  };\n  </script>\n  \n\n  \n  <style>\n  /* Add styles as needed */\n  </style>\n  "],"mappings":";gCAIMA,mBAAA,CAAyC,YAArC,kCAAgC;;;;;;;;gCAYlCA,mBAAA,CAAgE,WAA7D,2DAAyD;oBAA5DC,UAAgE,C;;uBAbpEC,mBAAA,CAeM,cAdJC,UAAyC,EAC9BC,KAAA,CAAAC,QAAQ,IAAID,KAAA,CAAAC,QAAQ,CAACC,MAAM,I,cAAtCJ,mBAAA,CASM,OAAAK,UAAA,GARJC,mBAAA,iDAAoD,G,kBACpDN,mBAAA,CAMMO,SAAA,QAAAC,WAAA,CANeN,KAAA,CAAAC,QAAQ,CAACC,MAAM,EAAxBK,KAAK;yBAAjBT,mBAAA,CAMM;MANiCU,GAAG,EAAED,KAAK,CAACE;QAChDb,mBAAA,CAAoC,WAAjC,WAAS,GAAAc,gBAAA,CAAGH,KAAK,CAACI,QAAQ,kBAC7Bf,mBAAA,CAA+B,WAA5B,SAAO,GAAAc,gBAAA,CAAGH,KAAK,CAACK,KAAK,kBACxBhB,mBAAA,CAA0C,WAAvC,eAAa,GAAAc,gBAAA,CAAGH,KAAK,CAACM,UAAU,kBACnCT,mBAAA,wCAA2C,EAC3CR,mBAAA,CAA6D;MAAvDkB,GAAG,EAAEC,QAAA,CAAAC,WAAW,CAACT,KAAK,CAACU,UAAU;MAAGC,GAAG,EAAC;;qDAGlDpB,mBAAA,CAEM,OAAAqB,UAAA,MAAAC,UAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}