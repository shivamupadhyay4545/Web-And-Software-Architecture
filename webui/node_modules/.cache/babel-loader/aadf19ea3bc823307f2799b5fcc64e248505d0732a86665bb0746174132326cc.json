{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n/*!\n * Image Compressor v1.1.4\n * https://xkeshi.github.io/image-compressor\n *\n * Copyright 2017-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-06-20T07:28:41.051Z\n */\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\nvar canvasToBlob = createCommonjsModule(function (module) {\n  (function (window) {\n    var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n    var hasBlobConstructor = window.Blob && function () {\n      try {\n        return Boolean(new Blob());\n      } catch (e) {\n        return false;\n      }\n    }();\n    var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100;\n      } catch (e) {\n        return false;\n      }\n    }();\n    var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n    var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n    var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n      var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb;\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern);\n      if (!matches) {\n        throw new Error('invalid data URI');\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n      isBase64 = !!matches[4];\n      dataString = dataURI.slice(matches[0].length);\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString);\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString);\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length);\n      intArray = new Uint8Array(arrayBuffer);\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        });\n      }\n      bb = new BlobBuilder();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mediaType);\n    };\n    if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n      if (CanvasPrototype.mozGetAsFile) {\n        CanvasPrototype.toBlob = function (callback, type, quality) {\n          var self = this;\n          setTimeout(function () {\n            if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n              callback(dataURLtoBlob(self.toDataURL(type, quality)));\n            } else {\n              callback(self.mozGetAsFile('blob', type));\n            }\n          });\n        };\n      } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n        CanvasPrototype.toBlob = function (callback, type, quality) {\n          var self = this;\n          setTimeout(function () {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)));\n          });\n        };\n      }\n    }\n    if (typeof undefined === 'function' && undefined.amd) {\n      undefined(function () {\n        return dataURLtoBlob;\n      });\n    } else if (module.exports) {\n      module.exports = dataURLtoBlob;\n    } else {\n      window.dataURLtoBlob = dataURLtoBlob;\n    }\n  })(window);\n});\n\n/* globals Blob */\nvar toString = Object.prototype.toString;\nvar isBlob = function (x) {\n  return x instanceof Blob || toString.call(x) === '[object Blob]';\n};\nvar DEFAULTS = {\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n  /**\n   * PNG files over this value (5M by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * Check out {@link https://github.com/xkeshi/image-compressor/issues/2 #2}.\n   * @type {number}\n   */\n  convertSize: 5000000,\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.fillStyle = '#fff' }\n   */\n  beforeDraw: null,\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.filter = grayscale(100%) }\n   */\n  drew: null,\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) { console.log(file) }\n   */\n  success: null,\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) { console.log(err.message) }\n   */\n  error: null\n};\nvar REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\nfunction isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @param {boolean} [includeDot=true] - Include a leading dot or not.\n * @returns {boolean} Returns the image extension.\n */\nfunction imageTypeToExtension(value) {\n  var includeDot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var extension = isImageType(value) ? value.substr(6) : '';\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n  if (extension && includeDot) {\n    extension = '.' + extension;\n  }\n  return extension;\n}\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n  length += start;\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n  return str;\n}\nvar _window = window,\n  btoa = _window.btoa;\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers as IE.\n  if (typeof uint8.forEach === 'function') {\n    uint8.forEach(function (value) {\n      data += fromCharCode(value);\n    });\n  } else {\n    var length = uint8.length;\n    for (var i = 0; i < length; i += 1) {\n      data += fromCharCode(uint8[i]);\n    }\n  }\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n      offset += 1;\n    }\n  }\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n      littleEndian = endianness === 0x4949;\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n        if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n          var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n          if (firstIFDOffset >= 0x00000008) {\n            ifdStart = tiffOffset + firstIFDOffset;\n          }\n        }\n      }\n    }\n  }\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n        // 8 is the offset of the current tag's value\n        _offset += 8;\n\n        // Get the original orientation value\n        orientation = dataView.getUint16(_offset, littleEndian);\n\n        // Override the orientation with its default value\n        dataView.setUint16(_offset, 1, littleEndian);\n        break;\n      }\n    }\n  }\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n    default:\n  }\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _window$1 = window,\n  ArrayBuffer$1 = _window$1.ArrayBuffer,\n  FileReader = _window$1.FileReader;\nvar URL = window.URL || window.webkitURL;\nvar REGEXP_EXTENSION = /\\.\\w+$/;\n\n/**\n * Creates a new image compressor.\n * @class\n */\n\nvar ImageCompressor = function () {\n  /**\n   * The constructor of ImageCompressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  function ImageCompressor(file, options) {\n    classCallCheck(this, ImageCompressor);\n    this.result = null;\n    if (file) {\n      this.compress(file, options);\n    }\n  }\n\n  /**\n   * The main compress method.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   * @returns {Promise} - A Promise instance.\n   */\n\n  createClass(ImageCompressor, [{\n    key: 'compress',\n    value: function compress(file, options) {\n      var _this = this;\n      var image = new Image();\n      options = _extends({}, DEFAULTS, options);\n      if (!ArrayBuffer$1) {\n        options.checkOrientation = false;\n      }\n      return new Promise(function (resolve, reject) {\n        if (!isBlob(file)) {\n          reject(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n        var mimeType = file.type;\n        if (!isImageType(mimeType)) {\n          reject(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n        if (!URL && !FileReader) {\n          reject(new Error('The current browser does not support image compression.'));\n          return;\n        }\n        if (URL && !options.checkOrientation) {\n          resolve({\n            url: URL.createObjectURL(file)\n          });\n        } else if (FileReader) {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            resolve(checkOrientation ? _extends({\n              url: arrayBufferToDataURL(result, mimeType)\n            }, parseOrientation(getOrientation(result))) : {\n              url: result\n            });\n          };\n          reader.onabort = function () {\n            reject(new Error('Aborted to load the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            reject(new Error('Failed to load the image with FileReader.'));\n          };\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }).then(function (data) {\n        return new Promise(function (resolve, reject) {\n          image.onload = function () {\n            return resolve(_extends({}, data, {\n              naturalWidth: image.naturalWidth,\n              naturalHeight: image.naturalHeight\n            }));\n          };\n          image.onabort = function () {\n            reject(new Error('Aborted to load the image.'));\n          };\n          image.onerror = function () {\n            reject(new Error('Failed to load the image.'));\n          };\n          image.alt = file.name;\n          image.src = data.url;\n        });\n      }).then(function (_ref2) {\n        var naturalWidth = _ref2.naturalWidth,\n          naturalHeight = _ref2.naturalHeight,\n          _ref2$rotate = _ref2.rotate,\n          rotate = _ref2$rotate === undefined ? 0 : _ref2$rotate,\n          _ref2$scaleX = _ref2.scaleX,\n          scaleX = _ref2$scaleX === undefined ? 1 : _ref2$scaleX,\n          _ref2$scaleY = _ref2.scaleY,\n          scaleY = _ref2$scaleY === undefined ? 1 : _ref2$scaleY;\n        return new Promise(function (resolve) {\n          var canvas = document.createElement('canvas');\n          var context = canvas.getContext('2d');\n          var aspectRatio = naturalWidth / naturalHeight;\n          var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n          var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n          var minWidth = Math.max(options.minWidth, 0) || 0;\n          var minHeight = Math.max(options.minHeight, 0) || 0;\n          var width = naturalWidth;\n          var height = naturalHeight;\n          if (maxWidth < Infinity && maxHeight < Infinity) {\n            if (maxHeight * aspectRatio > maxWidth) {\n              maxHeight = maxWidth / aspectRatio;\n            } else {\n              maxWidth = maxHeight * aspectRatio;\n            }\n          } else if (maxWidth < Infinity) {\n            maxHeight = maxWidth / aspectRatio;\n          } else if (maxHeight < Infinity) {\n            maxWidth = maxHeight * aspectRatio;\n          }\n          if (minWidth > 0 && minHeight > 0) {\n            if (minHeight * aspectRatio > minWidth) {\n              minHeight = minWidth / aspectRatio;\n            } else {\n              minWidth = minHeight * aspectRatio;\n            }\n          } else if (minWidth > 0) {\n            minHeight = minWidth / aspectRatio;\n          } else if (minHeight > 0) {\n            minWidth = minHeight * aspectRatio;\n          }\n          if (options.width > 0) {\n            var _options = options;\n            width = _options.width;\n            height = width / aspectRatio;\n          } else if (options.height > 0) {\n            var _options2 = options;\n            height = _options2.height;\n            width = height * aspectRatio;\n          }\n          width = Math.min(Math.max(width, minWidth), maxWidth);\n          height = Math.min(Math.max(height, minHeight), maxHeight);\n          var destX = -width / 2;\n          var destY = -height / 2;\n          var destWidth = width;\n          var destHeight = height;\n          if (Math.abs(rotate) % 180 === 90) {\n            var _width$height = {\n              width: height,\n              height: width\n            };\n            width = _width$height.width;\n            height = _width$height.height;\n          }\n          canvas.width = normalizeDecimalNumber(width);\n          canvas.height = normalizeDecimalNumber(height);\n          if (!isImageType(options.mimeType)) {\n            options.mimeType = file.type;\n          }\n          var defaultFillStyle = 'transparent';\n\n          // Converts PNG files over the `convertSize` to JPEGs.\n          if (file.size > options.convertSize && options.mimeType === 'image/png') {\n            defaultFillStyle = '#fff';\n            options.mimeType = 'image/jpeg';\n          }\n\n          // Override the default fill color (#000, black)\n          context.fillStyle = defaultFillStyle;\n          context.fillRect(0, 0, width, height);\n          context.save();\n          context.translate(width / 2, height / 2);\n          context.rotate(rotate * Math.PI / 180);\n          context.scale(scaleX, scaleY);\n          if (options.beforeDraw) {\n            options.beforeDraw.call(_this, context, canvas);\n          }\n          context.drawImage(image, Math.floor(normalizeDecimalNumber(destX)), Math.floor(normalizeDecimalNumber(destY)), Math.floor(normalizeDecimalNumber(destWidth)), Math.floor(normalizeDecimalNumber(destHeight)));\n          if (options.drew) {\n            options.drew.call(_this, context, canvas);\n          }\n          context.restore();\n          var done = function done(result) {\n            resolve({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          };\n          if (canvas.toBlob) {\n            canvas.toBlob(done, options.mimeType, options.quality);\n          } else {\n            done(canvasToBlob(canvas.toDataURL(options.mimeType, options.quality)));\n          }\n        });\n      }).then(function (_ref3) {\n        var naturalWidth = _ref3.naturalWidth,\n          naturalHeight = _ref3.naturalHeight,\n          result = _ref3.result;\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name;\n\n            // Convert the extension to match its type\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n        _this.result = result;\n        if (options.success) {\n          options.success.call(_this, result);\n        }\n        return Promise.resolve(result);\n      }).catch(function (err) {\n        if (!options.error) {\n          throw err;\n        }\n        options.error.call(_this, err);\n      });\n    }\n  }]);\n  return ImageCompressor;\n}();\nexport default ImageCompressor;","map":{"version":3,"names":["createCommonjsModule","fn","module","exports","canvasToBlob","window","CanvasPrototype","HTMLCanvasElement","prototype","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","i","bb","match","Error","slice","length","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","self","setTimeout","toDataURL","undefined","amd","toString","Object","isBlob","x","call","DEFAULTS","checkOrientation","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","height","mimeType","convertSize","beforeDraw","drew","success","error","REGEXP_IMAGE_TYPE","isImageType","value","test","imageTypeToExtension","includeDot","arguments","extension","substr","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","_window","btoa","arrayBufferToDataURL","uint8","data","forEach","getOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","_extends","assign","source","hasOwnProperty","_window$1","ArrayBuffer$1","FileReader","URL","webkitURL","REGEXP_EXTENSION","ImageCompressor","file","options","result","compress","_this","image","Image","Promise","resolve","reject","url","createObjectURL","reader","onload","_ref","onabort","onerror","readAsArrayBuffer","readAsDataURL","then","naturalWidth","naturalHeight","alt","name","src","_ref2","_ref2$rotate","_ref2$scaleX","_ref2$scaleY","canvas","document","createElement","context","getContext","aspectRatio","max","_options","_options2","min","destX","destY","destWidth","destHeight","abs","_width$height","defaultFillStyle","fillStyle","fillRect","save","translate","PI","scale","drawImage","floor","restore","done","_ref3","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","catch","err"],"sources":["/Users/shivamkumar/Desktop/wasaphoto/webui/node_modules/image-compressor.js/dist/image-compressor.esm.js"],"sourcesContent":["/*!\n * Image Compressor v1.1.4\n * https://xkeshi.github.io/image-compressor\n *\n * Copyright 2017-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-06-20T07:28:41.051Z\n */\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar canvasToBlob = createCommonjsModule(function (module) {\n(function (window) {\n\n  var CanvasPrototype =\n    window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n  var hasBlobConstructor =\n    window.Blob &&\n    (function () {\n      try {\n        return Boolean(new Blob())\n      } catch (e) {\n        return false\n      }\n    })();\n  var hasArrayBufferViewSupport =\n    hasBlobConstructor &&\n    window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    })();\n  var BlobBuilder =\n    window.BlobBuilder ||\n    window.WebKitBlobBuilder ||\n    window.MozBlobBuilder ||\n    window.MSBlobBuilder;\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n  var dataURLtoBlob =\n    (hasBlobConstructor || BlobBuilder) &&\n    window.atob &&\n    window.ArrayBuffer &&\n    window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb;\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern);\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n      isBase64 = !!matches[4];\n      dataString = dataURI.slice(matches[0].length);\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString);\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString);\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length);\n      intArray = new Uint8Array(arrayBuffer);\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        })\n      }\n      bb = new BlobBuilder();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mediaType)\n    };\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)));\n          } else {\n            callback(self.mozGetAsFile('blob', type));\n          }\n        });\n      };\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          callback(dataURLtoBlob(self.toDataURL(type, quality)));\n        });\n      };\n    }\n  }\n  if (typeof undefined === 'function' && undefined.amd) {\n    undefined(function () {\n      return dataURLtoBlob\n    });\n  } else if (module.exports) {\n    module.exports = dataURLtoBlob;\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob;\n  }\n})(window);\n});\n\n/* globals Blob */\nvar toString = Object.prototype.toString;\n\nvar isBlob = function (x) {\n\treturn x instanceof Blob || toString.call(x) === '[object Blob]';\n};\n\nvar DEFAULTS = {\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n\n  /**\n   * PNG files over this value (5M by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * Check out {@link https://github.com/xkeshi/image-compressor/issues/2 #2}.\n   * @type {number}\n   */\n  convertSize: 5000000,\n\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.fillStyle = '#fff' }\n   */\n  beforeDraw: null,\n\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.filter = grayscale(100%) }\n   */\n  drew: null,\n\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) { console.log(file) }\n   */\n  success: null,\n\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) { console.log(err.message) }\n   */\n  error: null\n};\n\nvar REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\nfunction isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @param {boolean} [includeDot=true] - Include a leading dot or not.\n * @returns {boolean} Returns the image extension.\n */\nfunction imageTypeToExtension(value) {\n  var includeDot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var extension = isImageType(value) ? value.substr(6) : '';\n\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n\n  if (extension && includeDot) {\n    extension = '.' + extension;\n  }\n\n  return extension;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar _window = window,\n    btoa = _window.btoa;\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers as IE.\n  if (typeof uint8.forEach === 'function') {\n    uint8.forEach(function (value) {\n      data += fromCharCode(value);\n    });\n  } else {\n    var length = uint8.length;\n\n\n    for (var i = 0; i < length; i += 1) {\n      data += fromCharCode(uint8[i]);\n    }\n  }\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _window$1 = window,\n    ArrayBuffer$1 = _window$1.ArrayBuffer,\n    FileReader = _window$1.FileReader;\n\nvar URL = window.URL || window.webkitURL;\nvar REGEXP_EXTENSION = /\\.\\w+$/;\n\n/**\n * Creates a new image compressor.\n * @class\n */\n\nvar ImageCompressor = function () {\n  /**\n   * The constructor of ImageCompressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  function ImageCompressor(file, options) {\n    classCallCheck(this, ImageCompressor);\n\n    this.result = null;\n\n    if (file) {\n      this.compress(file, options);\n    }\n  }\n\n  /**\n   * The main compress method.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   * @returns {Promise} - A Promise instance.\n   */\n\n\n  createClass(ImageCompressor, [{\n    key: 'compress',\n    value: function compress(file, options) {\n      var _this = this;\n\n      var image = new Image();\n\n      options = _extends({}, DEFAULTS, options);\n\n      if (!ArrayBuffer$1) {\n        options.checkOrientation = false;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!isBlob(file)) {\n          reject(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          reject(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL && !FileReader) {\n          reject(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (URL && !options.checkOrientation) {\n          resolve({\n            url: URL.createObjectURL(file)\n          });\n        } else if (FileReader) {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n\n\n            resolve(checkOrientation ? _extends({\n              url: arrayBufferToDataURL(result, mimeType)\n            }, parseOrientation(getOrientation(result))) : {\n              url: result\n            });\n          };\n          reader.onabort = function () {\n            reject(new Error('Aborted to load the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            reject(new Error('Failed to load the image with FileReader.'));\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }).then(function (data) {\n        return new Promise(function (resolve, reject) {\n          image.onload = function () {\n            return resolve(_extends({}, data, {\n              naturalWidth: image.naturalWidth,\n              naturalHeight: image.naturalHeight\n            }));\n          };\n          image.onabort = function () {\n            reject(new Error('Aborted to load the image.'));\n          };\n          image.onerror = function () {\n            reject(new Error('Failed to load the image.'));\n          };\n          image.alt = file.name;\n          image.src = data.url;\n        });\n      }).then(function (_ref2) {\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === undefined ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === undefined ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === undefined ? 1 : _ref2$scaleY;\n        return new Promise(function (resolve) {\n          var canvas = document.createElement('canvas');\n          var context = canvas.getContext('2d');\n          var aspectRatio = naturalWidth / naturalHeight;\n          var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n          var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n          var minWidth = Math.max(options.minWidth, 0) || 0;\n          var minHeight = Math.max(options.minHeight, 0) || 0;\n          var width = naturalWidth;\n          var height = naturalHeight;\n\n          if (maxWidth < Infinity && maxHeight < Infinity) {\n            if (maxHeight * aspectRatio > maxWidth) {\n              maxHeight = maxWidth / aspectRatio;\n            } else {\n              maxWidth = maxHeight * aspectRatio;\n            }\n          } else if (maxWidth < Infinity) {\n            maxHeight = maxWidth / aspectRatio;\n          } else if (maxHeight < Infinity) {\n            maxWidth = maxHeight * aspectRatio;\n          }\n\n          if (minWidth > 0 && minHeight > 0) {\n            if (minHeight * aspectRatio > minWidth) {\n              minHeight = minWidth / aspectRatio;\n            } else {\n              minWidth = minHeight * aspectRatio;\n            }\n          } else if (minWidth > 0) {\n            minHeight = minWidth / aspectRatio;\n          } else if (minHeight > 0) {\n            minWidth = minHeight * aspectRatio;\n          }\n\n          if (options.width > 0) {\n            var _options = options;\n            width = _options.width;\n\n            height = width / aspectRatio;\n          } else if (options.height > 0) {\n            var _options2 = options;\n            height = _options2.height;\n\n            width = height * aspectRatio;\n          }\n\n          width = Math.min(Math.max(width, minWidth), maxWidth);\n          height = Math.min(Math.max(height, minHeight), maxHeight);\n\n          var destX = -width / 2;\n          var destY = -height / 2;\n          var destWidth = width;\n          var destHeight = height;\n\n          if (Math.abs(rotate) % 180 === 90) {\n            var _width$height = {\n              width: height,\n              height: width\n            };\n            width = _width$height.width;\n            height = _width$height.height;\n          }\n\n          canvas.width = normalizeDecimalNumber(width);\n          canvas.height = normalizeDecimalNumber(height);\n\n          if (!isImageType(options.mimeType)) {\n            options.mimeType = file.type;\n          }\n\n          var defaultFillStyle = 'transparent';\n\n          // Converts PNG files over the `convertSize` to JPEGs.\n          if (file.size > options.convertSize && options.mimeType === 'image/png') {\n            defaultFillStyle = '#fff';\n            options.mimeType = 'image/jpeg';\n          }\n\n          // Override the default fill color (#000, black)\n          context.fillStyle = defaultFillStyle;\n          context.fillRect(0, 0, width, height);\n          context.save();\n          context.translate(width / 2, height / 2);\n          context.rotate(rotate * Math.PI / 180);\n          context.scale(scaleX, scaleY);\n\n          if (options.beforeDraw) {\n            options.beforeDraw.call(_this, context, canvas);\n          }\n\n          context.drawImage(image, Math.floor(normalizeDecimalNumber(destX)), Math.floor(normalizeDecimalNumber(destY)), Math.floor(normalizeDecimalNumber(destWidth)), Math.floor(normalizeDecimalNumber(destHeight)));\n\n          if (options.drew) {\n            options.drew.call(_this, context, canvas);\n          }\n\n          context.restore();\n\n          var done = function done(result) {\n            resolve({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          };\n\n          if (canvas.toBlob) {\n            canvas.toBlob(done, options.mimeType, options.quality);\n          } else {\n            done(canvasToBlob(canvas.toDataURL(options.mimeType, options.quality)));\n          }\n        });\n      }).then(function (_ref3) {\n        var naturalWidth = _ref3.naturalWidth,\n            naturalHeight = _ref3.naturalHeight,\n            result = _ref3.result;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name;\n\n            // Convert the extension to match its type\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        _this.result = result;\n\n        if (options.success) {\n          options.success.call(_this, result);\n        }\n\n        return Promise.resolve(result);\n      }).catch(function (err) {\n        if (!options.error) {\n          throw err;\n        }\n\n        options.error.call(_this, err);\n      });\n    }\n  }]);\n  return ImageCompressor;\n}();\n\nexport default ImageCompressor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}