{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6ef6ca5e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"profile-container\"\n};\nconst _hoisted_2 = {\n  class: \"user-details\"\n};\nconst _hoisted_3 = {\n  class: \"detail\"\n};\nconst _hoisted_4 = {\n  class: \"detail\"\n};\nconst _hoisted_5 = {\n  class: \"detail\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"photo-list\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"photo-heading\"\n}, \"Photos\", -1 /* HOISTED */));\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"photo-details\"\n};\nconst _hoisted_11 = {\n  class: \"comment-count\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  class: \"like-count\"\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = {\n  class: \"upload-time\"\n};\nconst _hoisted_17 = {\n  key: 1\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"No photos available\", -1 /* HOISTED */));\nconst _hoisted_19 = [_hoisted_18];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_router_link, {\n    to: {\n      name: 'HomeView',\n      params: {\n        username: _ctx.$route.params.username\n      }\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Go to Home \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, \"Photos: \" + _toDisplayString($data.numberOfPhotos), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, \"Followers: \" + _toDisplayString($data.followersCount), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, \"Followings: \" + _toDisplayString($data.followingsCount), 1 /* TEXT */)]), $data.photos.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.photos, photo => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: photo.photoId,\n      class: \"photo-item\"\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => $options.showComments(photo)\n    }, [_createElementVNode(\"img\", {\n      src: $options.getImageUrl(photo.Photobytes),\n      alt: \"User Photo\"\n    }, null, 8 /* PROPS */, _hoisted_9)], 8 /* PROPS */, _hoisted_8), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"p\", _hoisted_11, \"Comments: \" + _toDisplayString(photo.NoComments), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.commentInput = $event),\n      class: \"comment-input\",\n      placeholder: \"Add a comment...\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.commentInput]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.postComment(photo.PhotoId),\n      class: \"post-comment-button\"\n    }, \" Post Comment \", 8 /* PROPS */, _hoisted_12), _createElementVNode(\"p\", _hoisted_13, \"Likes: \" + _toDisplayString(photo.Likes), 1 /* TEXT */), photo.Liked === 1 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      style: {\n        \"background-color\": \"red\"\n      },\n      onClick: $event => $options.toggleLike(photo.PhotoId, true),\n      class: \"dislike-button\"\n    }, \" Dislike \", 8 /* PROPS */, _hoisted_14)) : (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $options.toggleLike(photo.PhotoId, false),\n      class: \"like-button\"\n    }, \" Like \", 8 /* PROPS */, _hoisted_15)), _createElementVNode(\"p\", _hoisted_16, \" Uploaded At \" + _toDisplayString($options.formatTimestamp(photo.CreatedAt)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [..._hoisted_19]))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_18","_createElementBlock","_createVNode","_component_router_link","to","name","params","username","_ctx","$route","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","numberOfPhotos","_hoisted_4","followersCount","_hoisted_5","followingsCount","photos","length","_hoisted_6","_hoisted_7","_Fragment","_renderList","photo","key","photoId","onClick","$event","$options","showComments","src","getImageUrl","Photobytes","alt","_hoisted_10","_hoisted_11","NoComments","commentInput","placeholder","postComment","PhotoId","_hoisted_12","_hoisted_13","Likes","Liked","style","toggleLike","_hoisted_14","_hoisted_15","_hoisted_16","formatTimestamp","CreatedAt","_hoisted_17","_hoisted_19"],"sources":["/Users/shivamkumar/Downloads/wasagit/Web-And-Software-Architecture/webui/src/components/UserProfile.vue"],"sourcesContent":["<template>\n    <div>\n      <router-link\n        :to=\"{ name: 'HomeView', params: { username: $route.params.username } }\"\n      >\n        Go to Home\n      </router-link>\n      <div class=\"profile-container\">\n        <div class=\"user-details\">\n          <p class=\"detail\">Photos: {{ numberOfPhotos }}</p>\n          <p class=\"detail\">Followers: {{ followersCount }}</p>\n          <p class=\"detail\">Followings: {{ followingsCount }}</p>\n        </div>\n  \n        <div v-if=\"photos.length > 0\" class=\"photo-list\">\n          <h3 class=\"photo-heading\">Photos</h3>\n          <ul>\n            <div v-for=\"photo in photos\" :key=\"photo.photoId\" class=\"photo-item\">\n              <button @click=\"showComments(photo)\">\n                <img :src=\"getImageUrl(photo.Photobytes)\" alt=\"User Photo\" />\n              </button>\n              <div class=\"photo-details\">\n                <p class=\"comment-count\">Comments: {{ photo.NoComments }}</p>\n                <input\n                  v-model=\"commentInput\"\n                  class=\"comment-input\"\n                  placeholder=\"Add a comment...\"\n                />\n                <button\n                  @click=\"postComment(photo.PhotoId)\"\n                  class=\"post-comment-button\"\n                >\n                  Post Comment\n                </button>\n                <p class=\"like-count\">Likes: {{ photo.Likes }}</p>\n                <button style=\"background-color: red;\"\n                  v-if=\"photo.Liked === 1\"\n                  @click=\"toggleLike(photo.PhotoId, true)\"\n                  class=\"dislike-button\"\n                >\n                  Dislike\n                </button>\n                <button\n                  v-else\n                  @click=\"toggleLike(photo.PhotoId, false)\"\n                  class=\"like-button\"\n                >\n                  Like\n                </button>\n                <p class=\"upload-time\">\n                  Uploaded At {{ formatTimestamp(photo.CreatedAt) }}\n                </p>\n              </div>\n            </div>\n          </ul>\n        </div>\n        <div v-else>\n          <p>No photos available</p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import moment from 'moment';\n  \n  export default {\n    data() {\n      return {\n        numberOfPhotos: 0,\n        followersCount: 0,\n        followingsCount: 0,\n        photos: [],\n        commentInput: '',\n      };\n    },\n    methods: {\n      async fetchUserProfile() {\n        try {\n          const username = this.$route.params.username;\n          const response = await axios.get(`http://localhost:8080/user/${username}/profile`);\n          const data = response.data;\n  \n          this.numberOfPhotos = data['my profile']['PhotoNo'];\n          this.followersCount = data['my profile']['Followers'];\n          this.followingsCount = data['my profile']['Following'];\n          this.photos = data['my profile']['Photos'];\n        } catch (error) {\n          console.error('Error fetching user profile:', error);\n        }\n      },\n      getImageUrl(photobytes) {\n        if (photobytes) {\n          return `data:image/jpeg;base64,${photobytes}`;\n        }\n  \n        // If photobytes is null or undefined, return a placeholder or empty string\n        return '';\n      },\n      formatTimestamp(timestamp) {\n        // Use moment to format the timestamp\n        return moment(timestamp).format('YYYY-MM-DD HH:mm:ss');\n      },\n      async postComment(PhotoId) {\n        try {\n          const username = this.$route.params.username;\n          const response = await axios.post(\n            `http://localhost:8080/user/${username}/photos/comment?Photoid=${PhotoId}`,\n            {\n              content: this.commentInput,\n            }\n          );\n  \n          if (response.status === 200) {\n            // Successfully posted comment, fetch updated user data\n            this.fetchUserProfile(); // Corrected method name\n            // Clear the comment input\n            this.commentInput = '';\n          } else {\n            console.error('Failed to post comment:', response.statusText);\n          }\n        } catch (error) {\n          const username = this.$route.params.username;\n          console.error('Error while posting comment:', error.message, 'username:', username, 'Photoid:', PhotoId);\n        }\n      },\n      showComments(photo) {\n        // Use Vue Router to navigate to the comments route\n        this.$router.push({\n          name: 'CommentPhotoForm', // Replace with the actual name of your Comments route\n          params: { PhotoId: photo.PhotoId, username: this.$route.params.username },\n        });\n      },\n      async toggleLike(photoId, liked) {\n        try {\n          const username = this.$route.params.username;\n  \n          if (liked) {\n            // Send DELETE request to unlike the photo\n            await axios.delete(`http://localhost:8080/user/${username}/photos/likes?Photoid=${photoId}`);\n          } else {\n            // Send POST request to like the photo\n            await axios.post(`http://localhost:8080/user/${username}/photos/likes?Photoid=${photoId}`);\n          }\n          window.location.reload();\n          // Update dislikeStatus after toggling the like state\n        } catch (error) {\n          console.error('Error while toggling like:', error.message);\n        }\n      },\n    },\n    created() {\n      this.fetchUserProfile();\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .profile-container {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  \n  .user-details {\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\n  \n  .detail {\n    font-size: 16px;\n    margin: 5px 0;\n  }\n  \n  .photo-list {\n    padding: 20px;\n    background-color: #fff;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n  }\n  \n  .photo-heading {\n    font-size: 18px;\n    margin-bottom: 10px;\n  }\n  \n  .photo-item {\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .photo-details {\n    width: 100%;\n    margin-top: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .comment-count,\n  .like-count,\n  .upload-time {\n    font-size: 14px;\n    margin: 5px 0;\n  }\n  \n  .comment-input {\n    width: 100%;\n    margin: 10px 0;\n    padding: 5px;\n  }\n  \n  .post-comment-button,\n  .like-button,\n  .dislike-button {\n    background-color: #3498db;\n    color: #fff;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 3px;\n    cursor: pointer;\n    margin: 5px 0;\n  }\n  \n  .post-comment-button:hover,\n  .like-button:hover,\n  .dislike-button:hover {\n    background-color: #2980b9;\n  }\n  \n  .upload-time {\n    margin-top: 10px;\n  }\n  </style>\n  \n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}