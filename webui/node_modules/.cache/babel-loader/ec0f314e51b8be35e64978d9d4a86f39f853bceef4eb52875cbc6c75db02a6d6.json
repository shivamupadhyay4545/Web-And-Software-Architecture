{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      banUsername: '',\n      errorMessage: '',\n      successMessage: ''\n    };\n  },\n  methods: {\n    async banUser() {\n      try {\n        const currentUsername = this.$route.params.username;\n\n        // Make a POST request to ban the user\n        const response = await axios.post(`http://localhost:8080/user/${currentUsername}/ban_list`, {\n          banned: this.banUsername\n        });\n        if (response.status === 200) {\n          console.log('User banned successfully!');\n          this.banUsername = '';\n          window.location.reload();\n\n          // You can perform additional actions on successful ban\n        } else {\n          console.error('Failed to ban user:', response.statusText);\n          this.errorMessage = response.status === 409 ? response.data.message : 'Failed to ban user.';\n\n          // Clear the error message after 5 seconds\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 5000);\n        }\n      } catch (error) {\n        console.error('Error during user ban:', error.message);\n        if (error.response && error.response.status === 409) {\n          // Access the error message from the backend\n          this.errorMessage = error.response.data.message || 'User does not exist.';\n        } else {\n          this.errorMessage = 'An error occurred while banning the user.';\n        }\n\n        // Clear the error message after 5 seconds\n        setTimeout(() => {\n          this.errorMessage = '';\n        }, 5000);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","banUsername","errorMessage","successMessage","methods","banUser","currentUsername","$route","params","username","response","post","banned","status","console","log","window","location","reload","error","statusText","message","setTimeout"],"sources":["/Users/shivamkumar/Downloads/wasagit/Web-And-Software-Architecture/webui/src/components/BanUser.vue"],"sourcesContent":["<template>\n    <div class=\"register\">\n      <h2>Ban User</h2>\n      <form @submit.prevent=\"banUser\">\n        <input type=\"text\" v-model=\"banUsername\" placeholder=\"Enter username\" />\n  \n        <button type=\"submit\">Ban</button>\n      </form>\n  \n      <p v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</p>\n      <p v-if=\"successMessage\" style=\"color: green;\">{{ successMessage }}</p>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        banUsername: '',\n        errorMessage: '',\n        successMessage: '',\n      };\n    },\n    methods: {\n      async banUser() {\n        try {\n          const currentUsername = this.$route.params.username;\n  \n          // Make a POST request to ban the user\n          const response = await axios.post(`http://localhost:8080/user/${currentUsername}/ban_list`, {\n            banned: this.banUsername,\n          });\n  \n          if (response.status === 200) {\n            console.log('User banned successfully!');\n            this.banUsername=''\n            window.location.reload();\n            \n            // You can perform additional actions on successful ban\n          } else {\n            console.error('Failed to ban user:', response.statusText);\n            this.errorMessage = response.status === 409 ? response.data.message : 'Failed to ban user.';\n  \n            // Clear the error message after 5 seconds\n            setTimeout(() => {\n              this.errorMessage = '';\n            }, 5000);\n          }\n        } catch (error) {\n          console.error('Error during user ban:', error.message);\n  \n          if (error.response && error.response.status === 409) {\n            // Access the error message from the backend\n            this.errorMessage = error.response.data.message || 'User does not exist.';\n          } else {\n            this.errorMessage = 'An error occurred while banning the user.';\n          }\n  \n          // Clear the error message after 5 seconds\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 5000);\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style>\n.register input {\n  width: 200px;\n  height: 40px;\n  padding-left: 20px;\n  display: block;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px cornflowerblue;\n}\n.register button {\n  width: 300px;\n  height: 40px;\n  border: 1px crimson;\n  background: skyblue;\n  color: aliceblue;\n  cursor: pointer;\n}\n  </style>\n  "],"mappings":"AAeE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAMC,eAAc,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,QAAQ;;QAEnD;QACA,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAE,8BAA6BL,eAAgB,WAAU,EAAE;UAC1FM,MAAM,EAAE,IAAI,CAACX;QACf,CAAC,CAAC;QAEF,IAAIS,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;UACxC,IAAI,CAACd,WAAW,GAAC,EAAC;UAClBe,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;;UAExB;QACF,OAAO;UACLJ,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAET,QAAQ,CAACU,UAAU,CAAC;UACzD,IAAI,CAAClB,YAAW,GAAIQ,QAAQ,CAACG,MAAK,KAAM,GAAE,GAAIH,QAAQ,CAACV,IAAI,CAACqB,OAAM,GAAI,qBAAqB;;UAE3F;UACAC,UAAU,CAAC,MAAM;YACf,IAAI,CAACpB,YAAW,GAAI,EAAE;UACxB,CAAC,EAAE,IAAI,CAAC;QACV;MACF,EAAE,OAAOiB,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACE,OAAO,CAAC;QAEtD,IAAIF,KAAK,CAACT,QAAO,IAAKS,KAAK,CAACT,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UACnD;UACA,IAAI,CAACX,YAAW,GAAIiB,KAAK,CAACT,QAAQ,CAACV,IAAI,CAACqB,OAAM,IAAK,sBAAsB;QAC3E,OAAO;UACL,IAAI,CAACnB,YAAW,GAAI,2CAA2C;QACjE;;QAEA;QACAoB,UAAU,CAAC,MAAM;UACf,IAAI,CAACpB,YAAW,GAAI,EAAE;QACxB,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}